{
  "swagger": "2.0",
  "info": {
    "description": "This swagger contains delivery functionality.",
    "version": "1.0.0",
    "title": "Delivery",
    "contact": {
      "name": "Michael Limited",
      "url": "https://linkedin.com/in/michael-azarov-b13564140",
      "email": "MichaelAzarov1@gmail.com"
    },
    "license": {
      "name": "Proprietary software",
      "url": "https://en.wikipedia.org/wiki/Proprietary_software"
    },
    "termsOfService": "https://en.wikipedia.org/wiki/Terms_of_service"
  },
  "host": "localhost:8083",
  "basePath": "/delivery",
  "tags": [
    {
      "name": "delivery-details",
      "description": "Retrieves delivery details for specific order."
    },
    {
      "name": "deliveries",
      "description": "Retrieves basic info about all of the deliveries."
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/get-delivery-details": {
      "post": {
        "tags": [
          "delivery-details"
        ],
        "summary": "This API returns delivery details for a specific order number.",
        "description": "This API returns delivery details for input with a specific order number.",
        "operationId": "getDeliveryDetails",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "deliveryDetailsRequest",
            "description": "Delivery Details Request Object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeliveryDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeliveryDetailsResponse"
            },
            "examples": {
              "application/json": {
                "orderId": 2052091022,
                "name": "Michael Azarov",
                "totalPrice": 250,
                "location": "Mizpe-Ramon, Ben Gurion 8",
                "notes": "Extra napkins",
                "items": []
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Date": {
                "description": "The Date general HTTP header contains the date and time at which the message was originated.",
                "type": "string",
                "format": "date-time",
                "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-3]{1}[0-9]{1} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [1-3][0-9]{3} [0-2][0-9]:[0-6][0-9]:[0-6][0-9] GMT$",
                "x-example": "Tue, 06 Oct 2020 13:09:24 GMT"
              }
            },
            "examples": {
              "application/json": {
                "timestamp": "2020-10-06T13:09:24.390+00:00",
                "status": "400",
                "error": "Bad Request",
                "message": "Bad Request",
                "path": "/basepath/path"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Date": {
                "description": "The Date general HTTP header contains the date and time at which the message was originated.",
                "type": "string",
                "format": "date-time",
                "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-3]{1}[0-9]{1} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [1-3][0-9]{3} [0-2][0-9]:[0-6][0-9]:[0-6][0-9] GMT$",
                "x-example": "Tue, 06 Oct 2020 13:09:24 GMT"
              }
            },
            "examples": {
              "application/json": {
                "timestamp": "2020-10-06T13:09:24.390+00:00",
                "status": "401",
                "error": "Unauthorized",
                "message": "Unauthorized",
                "path": "/basepath/path"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Date": {
                "description": "The Date general HTTP header contains the date and time at which the message was originated.",
                "type": "string",
                "format": "date-time",
                "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-3]{1}[0-9]{1} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [1-3][0-9]{3} [0-2][0-9]:[0-6][0-9]:[0-6][0-9] GMT$",
                "x-example": "Tue, 06 Oct 2020 13:09:24 GMT"
              }
            },
            "examples": {
              "application/json": {
                "timestamp": "2020-10-06T13:09:24.390+00:00",
                "status": "403",
                "error": "Forbidden",
                "message": "Forbidden",
                "path": "/basepath/path"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Date": {
                "description": "The Date general HTTP header contains the date and time at which the message was originated.",
                "type": "string",
                "format": "date-time",
                "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-3]{1}[0-9]{1} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [1-3][0-9]{3} [0-2][0-9]:[0-6][0-9]:[0-6][0-9] GMT$",
                "x-example": "Tue, 06 Oct 2020 13:09:24 GMT"
              }
            },
            "examples": {
              "application/json": {
                "timestamp": "2020-10-06T13:09:24.390+00:00",
                "status": "404",
                "error": "Not Found",
                "message": "Not Found",
                "path": "/basepath/path"
              }
            }
          }
        }
      }
    },
    "/get-deliveries": {
      "get": {
        "tags": [
          "deliveries"
        ],
        "summary": "This API returns basic info about all of the deliveries.",
        "description": "This API returns basic info about all of the deliveries.",
        "operationId": "getDeliveries",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeliveriesResponse"
            },
            "examples": {
              "application/json": {
                "deliveryList": [
                  {
                    "orderId": 2052091022,
                    "name": "Michael Azarov",
                    "price": 50,
                    "status": "Delivered"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Date": {
                "description": "The Date general HTTP header contains the date and time at which the message was originated.",
                "type": "string",
                "format": "date-time",
                "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-3]{1}[0-9]{1} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [1-3][0-9]{3} [0-2][0-9]:[0-6][0-9]:[0-6][0-9] GMT$",
                "x-example": "Tue, 06 Oct 2020 13:09:24 GMT"
              }
            },
            "examples": {
              "application/json": {
                "timestamp": "2020-10-06T13:09:24.390+00:00",
                "status": "401",
                "error": "Unauthorized",
                "message": "Unauthorized",
                "path": "/basepath/path"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Date": {
                "description": "The Date general HTTP header contains the date and time at which the message was originated.",
                "type": "string",
                "format": "date-time",
                "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-3]{1}[0-9]{1} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [1-3][0-9]{3} [0-2][0-9]:[0-6][0-9]:[0-6][0-9] GMT$",
                "x-example": "Tue, 06 Oct 2020 13:09:24 GMT"
              }
            },
            "examples": {
              "application/json": {
                "timestamp": "2020-10-06T13:09:24.390+00:00",
                "status": "403",
                "error": "Forbidden",
                "message": "Forbidden",
                "path": "/basepath/path"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "headers": {
              "Date": {
                "description": "The Date general HTTP header contains the date and time at which the message was originated.",
                "type": "string",
                "format": "date-time",
                "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0-3]{1}[0-9]{1} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [1-3][0-9]{3} [0-2][0-9]:[0-6][0-9]:[0-6][0-9] GMT$",
                "x-example": "Tue, 06 Oct 2020 13:09:24 GMT"
              }
            },
            "examples": {
              "application/json": {
                "timestamp": "2020-10-06T13:09:24.390+00:00",
                "status": "404",
                "error": "Not Found",
                "message": "Not Found",
                "path": "/basepath/path"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "maxLength": 30,
          "minLength": 1,
          "pattern": "^[\\S ]+$",
          "example": "2020-10-06T13:09:24.390+00:00"
        },
        "status": {
          "type": "string",
          "maxLength": 3,
          "minLength": 3,
          "pattern": "^[\\S ]+$",
          "example": "400"
        },
        "error": {
          "type": "string",
          "maxLength": 25,
          "minLength": 1,
          "pattern": "^[\\S ]+$",
          "example": "Bad Request"
        },
        "message": {
          "type": "string",
          "maxLength": 2048,
          "minLength": 1,
          "example": "Bad Request"
        },
        "path": {
          "type": "string",
          "maxLength": 2048,
          "minLength": 1,
          "example": "/basepath/path"
        }
      }
    },
    "DeliveryDetailsRequest": {
      "type": "object",
      "required": [
        "orderId"
      ],
      "properties": {
        "orderId": {
          "type": "integer",
          "format": "int64",
          "description": "Order Id is the receipt number.",
          "example": 123456789
        }
      }
    },
    "DeliveryDetailsResponse": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "totalPrice": {
          "type": "number",
          "format": "double"
        },
        "location": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryDetails"
          }
        }
      }
    },
    "DeliveriesResponse": {
      "type": "object",
      "properties": {
        "deliveryList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Delivery"
          }
        }
      }
    },
    "Delivery": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "DeliveryDetails": {
      "type": "object",
      "properties": {
        "pizzaDescription": {
          "$ref": "#/definitions/PizzaDescription"
        },
        "numberOfPizzas": {
          "type": "integer",
          "format": "int32"
        },
        "toppings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PizzaToppings"
          }
        },
        "drinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PizzaDrinks"
          }
        },
        "orderPrice": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "PizzaDescription": {
      "type": "object",
      "required": [
        "item",
        "price",
        "image"
      ],
      "properties": {
        "item": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "discountedPrice": {
          "type": "number",
          "format": "double"
        },
        "image": {
          "type": "string"
        }
      }
    },
    "PizzaToppings": {
      "type": "object",
      "required": [
        "pizzaNumber",
        "toppings"
      ],
      "properties": {
        "pizzaNumber": {
          "type": "integer",
          "format": "int32"
        },
        "toppings": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PizzaDrinks": {
      "type": "object",
      "properties": {
        "item": {
          "type": "string"
        },
        "amount": {
          "type": "integer"
        }
      }
    }
  }
}